<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pinet.rest.mapper.ShopProductMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.pinet.rest.entity.ShopProduct">
        <result column="id" property="id"/>
        <result column="create_by" property="createBy"/>
        <result column="create_time" property="createTime"/>
        <result column="update_by" property="updateBy"/>
        <result column="update_time" property="updateTime"/>
        <result column="del_flag" property="delFlag"/>
        <result column="shop_id" property="shopId"/>
        <result column="prod_id" property="prodId"/>
        <result column="product_name" property="productName"/>
        <result column="unit_id" property="unitId"/>
        <result column="unit" property="unit"/>
        <result column="dish_type" property="dishType"/>
        <result column="dish_code" property="dishCode"/>
        <result column="help_code" property="helpCode"/>
        <result column="product_img" property="productImg"/>
        <result column="product_desc" property="productDesc"/>
        <result column="product_type_id" property="productTypeId"/>
        <result column="product_type" property="productType"/>
        <result column="shop_prod_status" property="shopProdStatus"/>
        <result column="sale_count" property="saleCount"/>
        <result column="lable_id" property="lableId"/>
    </resultMap>


    <resultMap id="ShopProductMap" type="com.pinet.rest.entity.vo.ShopProductVo">
        <id column="id" property="id"/>
        <result column="prod_id" property="prodId"/>
        <result column="product_name" property="productName"/>
        <result column="product_img" property="productImg"/>
        <result column="product_desc" property="productDesc"/>
        <result column="product_type_id" property="productTypeId"/>
        <result column="product_type" property="productType"/>
        <result column="dish_type" property="dishType"/>
        <result column="price" property="price"/>
        <result column="market_price" property="marketPrice"/>
        <result column="shop_id" property="shopId"/>
        <result column="labels" property="labels"/>
        <result column="groupId" property="groupId"/>
        <result column="group_name" property="groupName"/>
        <result column="group_type" property="groupType"/>
        <result column="max_choose" property="maxChoose"/>
        <result column="min_choose" property="minChoose"/>
        <collection property="skuList" resultMap="SkuMap"/>
    </resultMap>

    <resultMap id="SkuMap" type="com.pinet.rest.entity.vo.ShopProductSkuVo">
        <result column="skuId" property="skuId"/>
        <result column="skuName" property="skuName"/>
        <collection property="skuSpecs" resultMap="SkuSpecsMap"/>
    </resultMap>

    <resultMap id="SkuSpecsMap" type="com.pinet.rest.entity.vo.ShopProductSpecVo">
        <result column="prod_spec_id" property="prodSpecId"/>
        <result column="shop_prod_spec_id" property="shopProdSpecId"/>
        <result column="spec_name" property="specName"/>
        <result column="default_flag" property="defaultFlag"/>
        <result column="sku_id" property="skuId"/>
        <result column="spsPrice" property="price"/>
        <result column="spsMarketPrice" property="marketPrice"/>
        <result column="add_price" property="addPrice"/>
        <result column="stock" property="stock"/>
    </resultMap>

    <resultMap id="ShopProductListMap" type="com.pinet.rest.entity.vo.ShopProductListVo">
        <result column="shop_id" property="shopId"/>
        <result column="shop_name" property="shopName"/>
        <result column="address" property="address"/>
        <result column="lat" property="lat"/>
        <result column="lng" property="lng"/>
        <result column="distance" property="distance"/>
        <collection property="typeList" resultMap="ProdTypeMap"/>
    </resultMap>

    <resultMap id="ProdTypeMap" type="com.pinet.rest.entity.vo.ProdTypeVo">
        <result column="product_type_id" property="productTypeId"/>
        <result column="product_type" property="productType"/>
        <collection property="productList" resultMap="ShopProductMap"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id,
        create_by,
        create_time,
        update_by,
        update_time,
        del_flag,
        shop_id, prod_id, product_name, product_img, unit_id, unit, dish_type, dish_code, help_code, product_desc, product_type_id, product_type, shop_prod_status
    </sql>

    <select id="getProductByShopId" resultType="com.pinet.rest.entity.vo.HotProductVo">
        SELECT temp.id,
        temp.shop_id,
        s.shop_name,
        temp.prod_id,
        temp.product_name,
        temp.product_img,
        temp.product_type_id,
        SUM(temp.price) as price,
        SUM(temp.market_price) as marketPrice,
        (select ifnull(sum(prod_num),0) from order_product where shop_prod_id = temp.id and del_flag = 0) as sellnum
        FROM (
            SELECT
            sp.id AS id,
            sp.shop_id,
            sp.prod_id,
            sp.product_name,
            sp.product_img,
            sp.product_type_id,
            MAX(sps.market_price) as market_price,
            MIN(price) AS price
            FROM shop_product sp
            LEFT JOIN shop_product_spec sps ON sps.shop_prod_id = sp.id and sps.del_flag = 0
            WHERE sp.shop_id = #{shopId}
            and sp.shop_prod_status = 1
            and sp.dish_type = 'SINGLE'
            and sp.del_flag = 0
            GROUP BY sps.sku_id
        ) temp
        LEFT JOIN shop s ON s.id = temp.shop_id
        GROUP BY temp.id
        HAVING price > 5
        ORDER BY sellnum DESC
        LIMIT 16

    </select>

    <select id="selectLast12RecommendList" resultType="com.pinet.rest.entity.vo.RecommendProductVo">
        select *
        from (
                 select temp.shop_id,
                        temp.shop_name,
                        temp.id,
                        temp.prod_id,
                        temp.product_name,
                        temp.product_img,
                        temp.product_type_id,
                        sum(temp.market_price) as marketPrice,
                        sum(price)        as price
                 from (
                          select sp.shop_id,
                                 s.shop_name,
                                 sp.id,
                                 sp.prod_id,
                                 sp.product_name,
                                 sp.product_img,
                                 sp.product_type_id,
                                 max(sps.market_price) as market_price,
                                 ifnull(min(sps.price), 0)       as price
                          from shop_product sp
                          left join shop_product_spec sps on  sps.shop_prod_id = sp.id and sps.del_flag = 0
                          left join shop s on s.id = sp.shop_id
                          where sp.shop_id = #{param.shopId}
                            and sp.shop_prod_status = 1
                            and sp.dish_type = 'SINGLE'
                            <if test="prodIds != null and prodIds.size() > 0">
                                and sp.prod_id not in
                                <foreach collection="prodIds" item="item" separator="," open="(" close=")">
                                    #{item}
                                </foreach>
                            </if>

                            and sp.del_flag = 0
                          group by sps.sku_id
                      ) temp
                 group by temp.prod_id
                 having price > 5
                 order by RAND()
                 limit 12
             ) t
    </select>

    <select id="selectFirst8RecommendList" resultType="com.pinet.rest.entity.vo.RecommendProductVo">
        select *
        from (
                 select temp.shop_id,
                        temp.prod_id,
                        temp.id,
                        temp.product_name,
                        temp.product_img,
                        temp.product_type_id,
                        sum(temp.price)        as price,
                        sum(temp.market_price)        as marketPrice,
                        (select ifnull(sum(pgo.times),0)  from product_glance_over pgo where temp.prod_id = pgo.prod_id and pgo.del_flag = 0) as times

                 from (
                          select sp.shop_id,
                                 sp.id,
                                 sp.prod_id,
                                 sp.product_name,
                                 sp.product_img,
                                 sp.product_type_id,
                                 max(sps.market_price) as market_price,
                                 ifnull(min(sps.price), 0)       as price
                          from shop_product sp
                          left join shop_product_spec sps on  sps.shop_prod_id = sp.id and sps.del_flag = 0
                          where sp.shop_id = #{shopId}
                            and sp.shop_prod_status = 1
                            and sp.dish_type = 'SINGLE'
                            and sp.del_flag = 0
                          group by sps.sku_id
                      ) temp
                 group by temp.prod_id
                 having price > 5
                 order by times desc
                 limit 8
             ) t
    </select>


    <select id="getDetailById" resultMap="ShopProductMap">
        select sp.id,
        sp.prod_id,
        sp.product_name,
        sp.product_img,
        sp.product_desc,
        sp.shop_id,
        sp.product_type_id,
        sp.product_type,
        sp.dish_type,
        sps.price as spsPrice,
        sps.sku_id as skuId,
        sps.sku_name as skuName,
        sps.id as shop_prod_spec_id,
        sps.spec_name,
        sps.default_flag,
        sps.sku_id,
        sps.stock,
        (select GROUP_CONCAT(label_name,'/',color order by FIND_IN_SET(id,sp.lable_id)) from label where FIND_IN_SET(id,sp.lable_id) > 0 and del_flag = 0) as labels
        from shop_product sp
        left join shop_product_spec sps on sps.shop_prod_id = sp.id and sps.del_flag = 0
        inner join product_sku ps on ps.id = sps.sku_id and ps.del_flag = 0
        where sp.id = #{id}
        order by ps.id,sps.id
    </select>

    <select id="getComboDetailByShopIdAndDishIds" resultMap="ShopProductMap">
        select sp.id,
        sp.prod_id,
        sp.product_name,
        sp.product_img,
        sp.product_desc,
        sp.shop_id,
        sp.product_type_id,
        sp.product_type,
        sp.dish_type,
        sps.price as spsPrice,
        sps.sku_id as skuId,
        sps.sku_name as skuName,
        sps.id as shop_prod_spec_id,
        sps.spec_name,
        sps.default_flag,
        sps.sku_id,
        sps.stock,
        (select GROUP_CONCAT(label_name,'/',color order by FIND_IN_SET(id,sp.lable_id)) from label where FIND_IN_SET(id,sp.lable_id) > 0 and del_flag = 0) as labels
        from shop_product sp
        left join shop_product_spec sps on sps.shop_prod_id = sp.id and sps.del_flag = 0
        inner join product_sku ps on ps.id = sps.sku_id and ps.del_flag = 0
        where sp.shop_id = #{shopId}
        <if test="dishIds != null and dishIds.size() > 0">
            and sp.prod_id in
            <foreach collection="dishIds" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        and sp.del_flag = 0
        order by ps.id,sps.id
    </select>


    <select id="getComboDetailByShopIdAndShopProdId" resultMap="ShopProductMap">
        select sp.id,
		sp.prod_id,
		sp.product_name,
		sp.product_img,
		sp.product_desc,
		sp.shop_id,
		sp.product_type_id,
		sp.product_type,
		sp.dish_type,
		sps.sku_id as skuId,
        sps.sku_name as skuName,
        sps.id as shop_prod_spec_id,
        sps.sku_id,
        sps.stock,
        t.groupId,
        t.group_name,
        t.group_type,
        t.max_choose,
        t.min_choose,
		t.price/100 as price,
        t.sell_price/100 as market_price,
        t.dish_sku_price/100 as add_price,
        sps.spec_name,
        t.default_flag
        from shop_product sp
        left join shop_product_spec sps on sp.id = sps.shop_prod_id and sps.del_flag = 0
        inner join (
            select
                kcg.id as groupId,
                kcg.group_name,
                kcg.group_type,
                kcg.max_choose,
                kcg.min_choose,
                kcgd.id,
                kcgd.single_dish_id,
                kcgd.dish_name,
                kcgd.spec_name,
                kcgd.price,
                kcgd.sell_price,
                ifnull(kcgd.dish_sku_price,0) as dish_sku_price,
                kcgd.default_flag
            from kry_combo_group kcg
            inner join kry_combo_group_detail kcgd on kcg.id = kcgd.combo_group_id and kcgd.del_flag = 0
            where kcg.shop_prod_id = #{shopProdId} and kcg.del_flag = 0
        ) t on t.single_dish_id = sp.prod_id
       <!-- and sps.spec_name = t.spec_name
        and t.dish_name = sp.product_name -->
        where sp.shop_id = #{shopId} and sp.del_flag = 0
        and sp.prod_id in
        <foreach collection="dishIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        group by sp.id

    </select>


    <select id="getProductListByShopId" resultMap="ProdTypeMap">
        select temp.id,
			 temp.shop_id,
			 temp.prod_id,
			 temp.dish_type,
			 temp.product_name,
			 temp.product_img,
			 temp.product_type_id,
			 temp.product_type,
			 temp.product_desc,
			 temp.sort,
			 temp.sale_count,
			 sum(temp.price) as price,
			 sum(temp.market_price) as market_price,
			 (select GROUP_CONCAT(label_name,'/',color order by FIND_IN_SET(id,temp.lable_id)) from label where FIND_IN_SET(id,temp.lable_id) > 0 and del_flag = 0) as labels
        from (
                <!-- 单品 -->
                select sp.id,
                       sp.shop_id,
                       sp.prod_id,
                       sp.dish_type,
                       sp.product_name,
                       sp.product_img,
                       sp.product_type_id,
                       sp.product_type,
                       sp.product_desc,
                       sp.lable_id,
                       pt.sort,
                       sp.sale_count,
                       min(sps.price) as price,
                       max(sps.market_price) as market_price
                from shop_product sp
                inner join product_type pt on pt.id = sp.product_type_id and pt.del_flag = 0
                inner join shop_product_spec sps on sps.shop_prod_id = sp.id and sps.del_flag = 0
                where sp.shop_id = #{shopId}
                and sp.shop_prod_status = 1
                and sp.dish_type = 'SINGLE'
                and sp.del_flag = 0
                group by sps.sku_id

                union all


                <!-- 套餐-->
                select sp.id,
                       sp.shop_id,
                       sp.prod_id,
                       sp.dish_type,
                       sp.product_name,
                       sp.product_img,
                       sp.product_type_id,
                       sp.product_type,
                       sp.product_desc,
                       sp.lable_id,
                       pt.sort,
                       sp.sale_count,
                       min(kcgd.price/100) as price,
                       max(kcgd.sell_price/100) as market_price
                from shop_product sp
                inner join product_type pt on pt.id = sp.product_type_id and pt.del_flag = 0
                inner join kry_combo_group kcg on kcg.shop_prod_id = sp.id and kcg.del_flag = 0
                inner join kry_combo_group_detail kcgd on kcgd.combo_group_id = kcg.id and kcgd.single_dish_id = '' and kcgd.del_flag = 0
                where sp.shop_id = #{shopId}
                and sp.shop_prod_status = 1
                and sp.dish_type = 'COMBO'
                and sp.del_flag = 0
                group by kcg.id
        ) temp
        group by temp.id
        order by temp.sort,temp.price
    </select>

    <select id="search" resultMap="ShopProductMap">
        select temp.id,
               temp.shopId,
               temp.shop_name,
               temp.prod_id,
               temp.product_name,
               temp.product_img,
               temp.lat,
               temp.lng,
               temp.product_type_id,
               temp.product_type,
               sum(price) as price
        from (
                 select s.id  as shopId,
                        s.shop_name,
                        sp.id,
                        sp.prod_id,
                        sp.product_name,
                        sp.product_img,
                        s.lng,
                        s.lat,
                        sp.product_type_id,
                        sp.product_type,
                        min(sps.price) as price
                 from shop s
                 left join shop_product sp on s.id = sp.shop_id  and sp.del_flag = 0
                 left join shop_product_spec sps on sps.shop_prod_id = sp.id and sps.del_flag = 0
                 where s.id = #{shopId}
                   and sp.dish_type = 'SINGLE'
                   and sp.shop_prod_status = 1
                   and sp.product_name like concat('%', #{productName}, '%')
                   and s.del_flag = 0
                 group by sps.sku_id

                 union all

                 select s.id as shopId,
                       s.shop_name,
                       sp.id,
                       sp.prod_id,
                       sp.product_name,
                       sp.product_img,
					   s.lng,
                       s.lat,
                       sp.product_type_id,
                       sp.product_type,
                       min(kcgd.price/100) as price
                from shop s
				inner join shop_product sp on s.id = sp.shop_id
				inner join kry_combo_group kcg on kcg.shop_prod_id = sp.id and kcg.del_flag = 0
				inner join kry_combo_group_detail kcgd on kcgd.combo_group_id = kcg.id and kcgd.single_dish_id = '' and kcgd.del_flag = 0
                where sp.shop_id = #{shopId}
                and sp.shop_prod_status = 1
                and sp.dish_type = 'COMBO'
				and sp.product_name like concat('%', #{productName}, '%')
                and sp.del_flag = 0
                group by kcgd.combo_group_id
             ) temp
        group by temp.id
    </select>

    <select id="sellwell" resultType="String">
        select sp.product_name
        from shop_product sp
        inner join orders o on o.shop_id = sp.shop_id and o.del_flag = 0
        where o.shop_id = #{shopId}
          and o.order_status = 100
          and sp.del_flag = 0
        group by sp.prod_id
        order by count(1) desc
        limit 10
    </select>
    <select id="selectShopIdAndShopProdId" resultType="com.pinet.rest.entity.vo.GetShopProdIdByProdIdVo">
        select * from (
        SELECT s.id shopId,sp.id shopProductId,
               ROUND(
                           6378.138 * 2 * ASIN(
                               SQRT(
                                           POW( SIN( ( #{lat}  * PI() / 180- lat * PI() / 180 ) / 2 ), 2 ) + COS( #{lat} * PI() / 180 ) * COS( lat * PI() / 180 ) * POW( SIN( ( #{lng} * PI() / 180- lng * PI() / 180 ) / 2 ), 2 )
                                   )
                           ) * 1000
                   ) AS distance
        FROM shop s
                 left join shop_product sp on s.id = sp.shop_id
        WHERE s.del_flag = 0 and sp.del_flag = 0 and sp.product_name = #{shopProdName}
        ORDER BY
            distance ASC
        LIMIT 1) a where distance &lt; 20000
    </select>


</mapper>
